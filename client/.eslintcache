[{"E:\\MissFaiza\\test\\HPS\\client\\src\\index.js":"1","E:\\MissFaiza\\test\\HPS\\client\\src\\reportWebVitals.js":"2","E:\\MissFaiza\\test\\HPS\\client\\src\\App.js":"3","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\list\\List.js":"4","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\Dialog.js":"5","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\Stepper.js":"6","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\register\\Register.js":"7","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\welfare\\Welfare.js":"8","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\service\\Service.js":"9","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\GlobalHeader.js":"10","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\Popup.js":"11","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\welfare\\SubTable.js":"12","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\tableIcons.js":"13"},{"size":517,"mtime":1615956225543,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1615956225543,"results":"16","hashOfConfig":"15"},{"size":215,"mtime":1615956225543,"results":"17","hashOfConfig":"15"},{"size":4057,"mtime":1615964285620,"results":"18","hashOfConfig":"15"},{"size":1459,"mtime":1615956225543,"results":"19","hashOfConfig":"15"},{"size":4824,"mtime":1615965926847,"results":"20","hashOfConfig":"15"},{"size":15000,"mtime":1616052666209,"results":"21","hashOfConfig":"15"},{"size":15236,"mtime":1615965532304,"results":"22","hashOfConfig":"15"},{"size":7184,"mtime":1615964764600,"results":"23","hashOfConfig":"15"},{"size":1778,"mtime":1615956225543,"results":"24","hashOfConfig":"15"},{"size":629,"mtime":1615956225543,"results":"25","hashOfConfig":"15"},{"size":1860,"mtime":1616052463926,"results":"26","hashOfConfig":"15"},{"size":2213,"mtime":1616052366582,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"x7uinh",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\MissFaiza\\test\\HPS\\client\\src\\index.js",[],["63","64"],"E:\\MissFaiza\\test\\HPS\\client\\src\\reportWebVitals.js",[],"E:\\MissFaiza\\test\\HPS\\client\\src\\App.js",["65"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport List from './components/list/List.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\list\\List.js",["66","67"],"import React from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport FormDialog from '../Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nconst List = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    const [columns, setColumns] = React.useState([\r\n        { title: 'Adı', field: 'name' },\r\n        { title: 'Soyadı', field: 'surname' },\r\n        { title: 'Doğum Yılı', field: 'birthYear', type: 'numeric' },\r\n        { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\r\n    ]);\r\n    const [data, setData] = React.useState([\r\n        { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 }\r\n    ])\r\n    return (\r\n        <div style={{ maxWidth: '90%', margin : 'auto' }}>\r\n            <FormDialog open={open} handleClose={handleClose}/>\r\n            <MaterialTable\r\n                title = \"Dummy Data\"\r\n                columns = {columns}\r\n                data = {data}\r\n                actions={[\r\n                    {\r\n                        icon: AddIcon,\r\n                        tooltip: 'Add',\r\n                        isFreeAction: true,\r\n                        onClick: handleClickOpen,\r\n                    },\r\n                    // {\r\n                    //     icon: AddIcon,\r\n                    //     tooltip: 'Add',\r\n                    //     onClick: handleClickOpen,\r\n                    // }\r\n                  ]}\r\n                // editable={{\r\n                    // isEditable: rowData => rowData.name === 'a', // only name(a) rows would be editable\r\n                    // isEditHidden: rowData => rowData.name === 'x',\r\n                    // isDeletable: rowData => rowData.name === 'b', // only name(b) rows would be deletable,\r\n                    // isDeleteHidden: rowData => rowData.name === 'y',\r\n                    // onBulkUpdate: changes => \r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             /* setData([...data, newData]); */\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     }),\r\n                    // onRowAddCancelled: rowData => console.log('Row adding cancelled'),\r\n                    // onRowUpdateCancelled: rowData => console.log('Row editing cancelled'),\r\n                    // onRowAdd: newData =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             /* setData([...data, newData]); */\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     }),\r\n                    // onRowUpdate: (newData, oldData) =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             const dataUpdate = [...data];\r\n                    //             const index = oldData.tableData.id;\r\n                    //             dataUpdate[index] = newData;\r\n                    //             setData([...dataUpdate]);\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     }),\r\n                    // onRowDelete: oldData =>\r\n                    //     new Promise((resolve, reject) => {\r\n                    //         setTimeout(() => {\r\n                    //             const dataDelete = [...data];\r\n                    //             const index = oldData.tableData.id;\r\n                    //             dataDelete.splice(index, 1);\r\n                    //             setData([...dataDelete]);\r\n\r\n                    //             resolve();\r\n                    //         }, 1000);\r\n                    //     })\r\n                // }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\Dialog.js",["68","69","70","71","72","73","74","75","76"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport HorizontalLinearStepper from './Stepper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    backgroundColor: 'white'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FormDialog({open, handleClose}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n         <HorizontalLinearStepper handleClose={handleClose}/>\r\n        </AppBar>\r\n       \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\Stepper.js",["77","78"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Register from './register/Register';\r\nimport Services from './service/Service';\r\nimport Welfare from './welfare/Welfare';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Registeration', 'Welfare', 'Services'];\r\n}\r\n\r\nfunction getStepContent(step, handleNext, handleBack, recID, setrecID) {\r\n  switch (step) {\r\n    case 0:\r\n      return <Register recID={recID} setrecID={setrecID} next={handleNext} back={handleBack}/>;\r\n    case 1:\r\n      return <Welfare recID={recID} setrecID={setrecID} next={handleNext} back={handleBack}/>;\r\n    case 2:\r\n      return <Services recID={recID} setrecID={setrecID} next={handleNext} back={handleBack}/>;\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLinearStepper({handleClose}) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set());\r\n  const steps = getSteps();\r\n\r\n  const isStepOptional = (step) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if(activeStep == 2) {\r\n      handleClose()\r\n    } \r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n  const [recID, setrecID] = React.useState('');\r\n\r\n  const handleBack = () => {\r\n    if(activeStep == 0) {\r\n      handleClose()\r\n    } else {\r\n      setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          const labelProps = {};\r\n          if (isStepOptional(index)) {\r\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\r\n          }\r\n          if (isStepSkipped(index)) {\r\n            stepProps.completed = false;\r\n          }\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepLabel {...labelProps}>{label}</StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <div>\r\n        {activeStep === steps.length ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n            <Button onClick={handleReset} className={classes.button}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep, handleNext, handleBack, recID, setrecID)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              {isStepOptional(activeStep) && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleSkip}\r\n                  className={classes.button}\r\n                >\r\n                  Skip\r\n                </Button>\r\n              )}\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\register\\Register.js",["79","80","81","82"],"E:\\MissFaiza\\test\\HPS\\client\\src\\components\\welfare\\Welfare.js",["83"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport GlobalHeader from '../GlobalHeader';\r\nimport SubTable from './SubTable';\r\nimport axios from 'axios'\r\nimport Popup from '../Popup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Welfare({next, back, recID, setrecID}) {\r\n  const classes = useStyles();\r\n  const [ open, setOpen] = useState(false)\r\n  const [ err, setErr] = useState('')\r\n\r\n  const [Header, setHeader] = useState({\r\n    MRNo: recID,\r\n    TokenNo: \"\",\r\n    WelfareDate: new Date(),\r\n    Profession: \"\",\r\n    Fiqa: \"\",\r\n    Education: '',\r\n    Cast: \"\",\r\n    MonthlyIncome: 0,\r\n    Guardian: \"\",\r\n    OtherInfo: \"\",\r\n    MaleKids: \"\",\r\n    FemaleKids: \"\",\r\n    OtherKids: \"\",\r\n    Brothers: \"\",\r\n    Sisters: \"\",\r\n    NoOFFamilyMembers: \"\",\r\n    IsMarried: false,\r\n    IsAbleToPay: false,\r\n    IsEarning: false,\r\n    HaveGold: false,\r\n    ReqName: '',\r\n    ReqPhone: \"\",\r\n    ReqRelationWithPatient: '',\r\n    CreateUser: \"Admin\",\r\n    ModifyUser: \"Admin\",\r\n});\r\n\r\nconst validate = () => {\r\n  if (Header.WelfareDate === '' || Header.WelfareDate === undefined || Header.WelfareDate === null) {\r\n    setErr('WelfareDate is missing')\r\n    setOpen(true)\r\n    return false;\r\n  }\r\n  else if (Header.Profession === '' || Header.Profession === undefined || Header.Profession === null) {\r\n    setErr('Profession is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Fiqa === '' || Header.Fiqa === undefined || Header.Fiqa === null) {\r\n    setErr('Fiqa is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Education === '' || Header.Education === undefined || Header.Education === null) {\r\n    setErr('Education is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Cast === '' || Header.Cast === undefined || Header.Cast === null) {\r\n    setErr('Cast is missing')\r\n    return false;\r\n  }\r\n  else if (Header.MonthlyIncome === '' || Header.MonthlyIncome === undefined || Header.MonthlyIncome === null) {\r\n    setErr('MonthlyIncome is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Guardian === '' || Header.Guardian === undefined || Header.Guardian === null) {\r\n    setErr('Guardian is missing')\r\n    return false;\r\n  }\r\n  else if (Header.OtherInfo === '' || Header.OtherInfo === undefined || Header.OtherInfo === null) {\r\n    setErr('OtherInfo is missing')\r\n    return false;\r\n  }\r\n  else if (Header.MaleKids === '' || Header.MaleKids === undefined || Header.MaleKids === null) {\r\n    setErr('MaleKids is missing')\r\n    return false;\r\n  }\r\n  else if (Header.FemaleKids === '' || Header.FemaleKids === undefined || Header.FemaleKids === null) {\r\n    setErr('FemaleKids is missing')\r\n    return false;\r\n  }\r\n  else if (Header.OtherKids === '' || Header.OtherKids === undefined || Header.OtherKids === null) {\r\n    setErr('OtherKids is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Brothers === '' || Header.Brothers === undefined || Header.Brothers === null) {\r\n    setErr('Brothers is missing')\r\n    return false;\r\n  }\r\n  else if (Header.NoOFFamilyMembers === '' || Header.NoOFFamilyMembers === undefined || Header.NoOFFamilyMembers === null) {\r\n    setErr('NoOFFamilyMembers is missing')\r\n    return false;\r\n  }\r\n  else if (Header.IsMarried === '' || Header.IsMarried === undefined || Header.IsMarried === null) {\r\n    setErr('IsMarried is missing')\r\n    return false;\r\n  }\r\n  else if (Header.IsAbleToPay === '' || Header.IsAbleToPay === undefined || Header.IsAbleToPay === null) {\r\n    setErr('IsAbleToPay is missing')\r\n    return false;\r\n  }\r\n  else if (Header.IsEarning === '' || Header.IsEarning === undefined || Header.IsEarning === null) {\r\n    setErr('IsEarning is missing')\r\n    return false;\r\n  }\r\n  else if (Header.HaveGold === '' || Header.HaveGold === undefined || Header.HaveGold === null) {\r\n    setErr('HaveGold is missing')\r\n    return false;\r\n  }\r\n  else if (Header.ReqName === '' || Header.ReqName === undefined || Header.ReqName === null) {\r\n    setErr('ReqName is missing')\r\n    return false;\r\n  }\r\n  else if (Header.ReqPhone === '' || Header.ReqPhone === undefined || Header.ReqPhone === null) {\r\n    setErr('ReqPhone is missing')\r\n    return false;\r\n  }\r\n  else if (Header.ReqRelationWithPatient === '' || Header.ReqRelationWithPatient === undefined || Header.ReqRelationWithPatient === null) {\r\n    setErr('ReqRelationWithPatient is missing')\r\n    return false;\r\n  }\r\n  else {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst handleSubmit = () => {\r\n  const val=validate();\r\n  console.log(Header);\r\n  if ( val === true ) {\r\n    console.log(\"IN\")\r\n    axios.post('http://localhost:4000/api/welfare/add', Header)\r\n    .then(res => next())\r\n    .catch(err => console.log(err, 'err'))\r\n  }\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <Popup msg={err} open={open} handleClose={() => setOpen(false)}/>\r\n      <GlobalHeader forward={handleSubmit} back={back} title=\"Welfare\"/>\r\n      <div style={{ padding: 16, margin: 'auto', maxWidth: '80%', justifyContent:'center' }}>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <TextField value={Header.MRNo} id=\"MRNo\" fullWidth\r\n              type=\"text\" disabled={true}\r\n              label=\"M.R. #\"/>\r\n          </Grid>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n              onChange={(e) => setHeader({ ...Header, TokenNo: Number(e.target.value) })}\r\n              label=\"TokenNo\"/>\r\n          </Grid>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <TextField id=\"WelfareDate\" label=\"Welfare Date\" type=\"date\"\r\n              value={Header.WelfareDate} fullWidth\r\n              onChange={(e) => setHeader({ ...Header, WelfareDate: e.target.value })}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}/>\r\n          </Grid>\r\n          <Grid item md={4} sm={12} lg={3}>\r\n            <FormControlLabel color=\"primary\"\r\n              control={<Checkbox checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n              onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />}\r\n              label=\"Zakaat\"\r\n            />\r\n            <FormControlLabel color=\"primary\"\r\n              control={<Checkbox checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n              onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />}\r\n              label=\"Donation\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container>\r\n          <Grid sm={12}>\r\n            <Grid container spacing={2}>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <TextField value={Header.Profession} id=\"Profession\" type=\"text\" fullWidth\r\n                  onChange={(e) => setHeader({ ...Header, Profession: e.target.value })}\r\n                  label=\"Profession\"/>\r\n              </Grid>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel  id=\"demo-simple-select-helper-label\">Education</InputLabel>\r\n                  <Select \r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"Education\"\r\n                    value={Header.Education}\r\n                    onChange={(e) => setHeader({ ...Header, Education: e.target.value })}\r\n                  >\r\n                    <MenuItem value=\"matriculation\">Matriculation</MenuItem>\r\n                    <MenuItem value=\" intermediate\">Intermediate</MenuItem>\r\n                    <MenuItem value=\"bachelors\">Bachelors</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <FormControl fullWidth>\r\n                  <InputLabel  id=\"demo-simple-select-helper-label\">Fiqa</InputLabel>\r\n                  <Select \r\n                    labelId=\"demo-simple-select-helper-label\"\r\n                    id=\"Fiqa\"\r\n                    value={Header.Fiqa}\r\n                    onChange={(e) => setHeader({ ...Header, Fiqa: e.target.value })}\r\n                  >\r\n                    <MenuItem value=\"shia\">Shia</MenuItem>\r\n                    <MenuItem value=\"sunni\">Sunni</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item md={4} sm={12} lg={3}>\r\n                <TextField value={Header.Cast} id=\"Cast\" type=\"text\" fullWidth\r\n                  onChange={(e) => setHeader({ ...Header, Cast: e.target.value })}\r\n                  label=\"Cast\"/>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        \r\n        <Grid container>\r\n          <Grid sm={12}>\r\n            <Grid container spacing={4}>\r\n              <Grid item lg={7} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6} sm={12} lg={6}>\r\n                    <TextField value={Header.ReqName} id=\"ReqName\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, ReqName: e.target.value })}\r\n                      label=\"Requestor Name\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel  id=\"demo-simple-select-helper-label\">Relation With Patient</InputLabel>\r\n                      <Select \r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"ReqRelationWithPatient\"\r\n                        value={Header.ReqRelationWithPatient}\r\n                        onChange={(e) => setHeader({ ...Header, ReqRelationWithPatient: e.target.value })}\r\n                      >\r\n                        <MenuItem value=\"mother\">Mother</MenuItem>\r\n                        <MenuItem value=\"father\">Father</MenuItem>\r\n                        <MenuItem value=\"daughter\">Daughter</MenuItem>\r\n                        <MenuItem value=\"son\">Son</MenuItem>\r\n                        <MenuItem value=\"self\">Self</MenuItem>\r\n\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.ReqPhone} id=\"ReqPhone\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, ReqPhone: e.target.value })}\r\n                      label=\"Requestor Phone\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.Guardian} id=\"Guardian\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Guardian: e.target.value })}\r\n                      label=\"Guardian\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.MonthlyIncome} id=\"MonthlyIncome\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, MonthlyIncome: e.target.value })}\r\n                      label=\"Monthly Income\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.OtherInfo} id=\"OtherInfo\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, OtherInfo: e.target.value })}\r\n                      label=\"Other Info\"/>\r\n                  </Grid>\r\n                  <Grid item sm={12} md={12} lg={12}>\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.IsMarried} name=\"Is Maried\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, IsMarried: !Header.IsMarried })} />}\r\n                    label=\"Maried\"\r\n                  />\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.HaveGold} name=\"HaveGold\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, HaveGold: !Header.HaveGold })} />}\r\n                    label=\"Have Gold\"\r\n                  />\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.IsEarning} name=\"IsEarning\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, IsEarning: !Header.IsEarning })} />}\r\n                    label=\"Is Earning\"\r\n                  />\r\n                  <FormControlLabel color=\"primary\"\r\n                    control={<Checkbox checked={Header.IsAbleToPay} name=\"IsAbleToPay\" fullWidth\r\n                    onChange={e => setHeader({ ...Header, IsAbleToPay: !Header.IsAbleToPay })} />}\r\n                    label=\"Is Able To Pay\"\r\n                  />\r\n                </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={1}/>\r\n              <Grid item lg={4} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6} sm={12} lg={6}>\r\n                    <TextField value={Header.MaleKids} id=\"MaleKids\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, MaleKids: e.target.value })}\r\n                      label=\"No of Kids(male)\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.FemaleKids} id=\"FemaleKids\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, FemaleKids: e.target.value })}\r\n                      label=\"No of Kids(female)\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.OtherKids} id=\"OtherKids\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, OtherKids: e.target.value })}\r\n                      label=\"Other Kids\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.Brothers} id=\"Brothers\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Brothers: e.target.value })}\r\n                      label=\"No of Brothers\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.Sisters} id=\"Sisters\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Sisters: e.target.value })}\r\n                      label=\"No f Sisters\"/>\r\n                  </Grid>\r\n                  <Grid item md={6} sm={12}  lg={6}>\r\n                    <TextField value={Header.NoOFFamilyMembers} id=\"NoOFFamilyMembers\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, NoOFFamilyMembers: e.target.value })}\r\n                      label=\"Family Members\"/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n<SubTable/>\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\n","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\service\\Service.js",["84","85","86"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport GlobalHeader from '../GlobalHeader';\r\nimport axios from 'axios';\r\nimport Popup from '../Popup';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Service({next, back, recID, setrecID}) {\r\n  const classes = useStyles();\r\n  const [err, setErr] = useState('')\r\n  const [ open, setOpen] = useState(false)\r\n\r\n  const [Header, setHeader] = useState({\r\n    TokenNo: \"\",\r\n    ServiceDate: new Date(),\r\n    MRNo: recID,\r\n    Ward: \"\",\r\n    Amount: \"\",\r\n    TotalAmount: \"\",\r\n    PatientContribution: \"\",\r\n    Remarks: \"\",\r\n    CreatedUser: \"Admin\",\r\n    ModifyUser: \"Admin\"\r\n});\r\n\r\nconst validate = () => {\r\n  if (Header.ServiceDate === '' || Header.ServiceDate === undefined || Header.ServiceDate === null) {\r\n    setErr('ServiceDate is missing')\r\n    setOpen(true)\r\n    return false;\r\n  }\r\n  else if (Header.Ward === '' || Header.Ward === undefined || Header.Ward === null) {\r\n    setErr('Ward is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Amount === '' || Header.Amount === undefined || Header.Amount === null) {\r\n    setErr('Amount is missing')\r\n    return false;\r\n  }\r\n  else if (Header.TotalAmount === '' || Header.TotalAmount === undefined || Header.TotalAmount === null) {\r\n    setErr('TotalAmount is missing')\r\n    return false;\r\n  }\r\n  else if (Header.PatientContribution === '' || Header.PatientContribution === undefined || Header.PatientContribution === null) {\r\n    setErr('PatientContribution is missing')\r\n    return false;\r\n  }\r\n  else if (Header.Remarks === '' || Header.Remarks === undefined || Header.Remarks === null) {\r\n    setErr('Remarks is missing')\r\n    return false;\r\n  }\r\n  else {\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\nconst handleSubmit = () => {\r\n  const val=validate();\r\n  console.log(Header);\r\n  if ( val === true ) {\r\n    console.log(\"IN\")\r\n    axios.post('http://localhost:4000/api/service/add', Header)\r\n    .then(res => console.log(res))\r\n    .catch(err => console.log(err, 'err'))\r\n  }\r\n}\r\n  return (\r\n    <div>\r\n      <Popup msg={err} open={open} handleClose={() => setOpen(false)}/>\r\n      <GlobalHeader forward={handleSubmit} back={back} title=\"Service\"/>\r\n      <div style={{ padding: 16, margin: 'auto', maxWidth: '80%', justifyContent:'center' }}>\r\n      \r\n        <Grid container>\r\n          <Grid sm={12}>\r\n            <Grid container spacing={4}>\r\n              <Grid item lg={7} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.MRNo} id=\"MRNo\" fullWidth\r\n                      type=\"text\" disabled={true}\r\n                      label=\"M.R. #\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n                      label=\"Token No\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField id=\"ServiceDate\" label=\"Service Date\" type=\"date\"\r\n                      value={Header.ServiceDate} fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, ServiceDate: e.target.value })}\r\n                      InputLabelProps={{\r\n                        shrink: true,\r\n                      }}/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel  id=\"demo-simple-select-helper-label\">Gender</InputLabel>\r\n                      <Select \r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"Gender\"\r\n                        value={Header.Gender}\r\n                        onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n                      >\r\n                        <MenuItem value=\"male\">Male</MenuItem>\r\n                        <MenuItem value=\"female\">Female</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <FormControl fullWidth>\r\n                      <InputLabel  id=\"demo-simple-select-helper-label\">Ward</InputLabel>\r\n                      <Select \r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"Ward\"\r\n                        value={Header.Ward}\r\n                        onChange={(e) => setHeader({ ...Header, Ward: e.target.value })}\r\n                      >\r\n                        <MenuItem value=\"Ward #1\">Ward #1</MenuItem>\r\n                        <MenuItem value=\" Ward #2\">Ward #2</MenuItem>\r\n                        <MenuItem value=\"Ward #3\">Ward #3</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.Amount} id=\"Amount\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Amount: e.target.value })}\r\n                      label=\"Amount\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.TotalAmount} id=\"TotalAmount\" type=\"number\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, TotalAmount: e.target.value })}\r\n                      label=\"Total Amount\"/>\r\n                  </Grid>\r\n                  <Grid item md={4} sm={12} lg={3}>\r\n                    <TextField value={Header.PatientContribution} id=\"PatientContribution\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, PatientContribution: e.target.value })}\r\n                      label=\"Patient Contribution\"/>\r\n                  </Grid>\r\n                  <Grid item md={8} sm={12} lg={6}>\r\n                    <TextField value={Header.Remarks} id=\"Remarks\" type=\"text\" fullWidth\r\n                      onChange={(e) => setHeader({ ...Header, Remarks: e.target.value })}\r\n                      label=\"Remarks\"/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item lg={1}/>\r\n              <Grid item lg={4} sm={12}>\r\n                <Grid container spacing={2}>\r\n                  <Grid item md={6} sm={12} lg={6}>\r\n                    <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n                      // onChange={(e) => setHeader({ ...Header, MaleKids: e.target.value })}\r\n                      label=\"Token No\" disabled={true}/>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid> \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\GlobalHeader.js",["87"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {IoMdArrowRoundBack} from 'react-icons/io'\r\nimport {IoMdArrowRoundForward} from 'react-icons/io'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nexport default function GlobalHeader({forward, back, title, btn}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n        <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n                <IoMdArrowRoundBack onClick={back}/>\r\n            </IconButton>\r\n            <div style={{textAlign:'center', marginLeft:'45%'}}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n            { title }\r\n          </Typography>\r\n            </div>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <IoMdArrowRoundForward onClick={forward}/>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\Popup.js",["88"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nexport default function Popup({msg, open, handleClose}) {\r\n \r\n  return (\r\n    <div>\r\n      <Snackbar\r\n       anchorOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n      style={{ marginTop: 50 }}\r\n      open={open}\r\n      autoHideDuration={8000}\r\n      onClose={handleClose}\r\n      >\r\n      <MuiAlert onClose={handleClose} elevation={6} variant=\"filled\">\r\n        {msg}\r\n    </MuiAlert >\r\n    </Snackbar>\r\n    </div>\r\n  );\r\n}","E:\\MissFaiza\\test\\HPS\\client\\src\\components\\welfare\\SubTable.js",["89","90","91"],"E:\\MissFaiza\\test\\HPS\\client\\src\\components\\tableIcons.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"100","line":15,"column":21,"nodeType":"98","messageId":"99","endLine":15,"endColumn":31},{"ruleId":"96","severity":1,"message":"101","line":21,"column":18,"nodeType":"98","messageId":"99","endLine":21,"endColumn":25},{"ruleId":"96","severity":1,"message":"102","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"103","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":20},{"ruleId":"96","severity":1,"message":"104","line":6,"column":8,"nodeType":"98","messageId":"99","endLine":6,"endColumn":16},{"ruleId":"96","severity":1,"message":"105","line":7,"column":8,"nodeType":"98","messageId":"99","endLine":7,"endColumn":12},{"ruleId":"96","severity":1,"message":"106","line":8,"column":8,"nodeType":"98","messageId":"99","endLine":8,"endColumn":15},{"ruleId":"96","severity":1,"message":"107","line":10,"column":8,"nodeType":"98","messageId":"99","endLine":10,"endColumn":15},{"ruleId":"96","severity":1,"message":"108","line":11,"column":8,"nodeType":"98","messageId":"99","endLine":11,"endColumn":18},{"ruleId":"96","severity":1,"message":"109","line":12,"column":8,"nodeType":"98","messageId":"99","endLine":12,"endColumn":18},{"ruleId":"96","severity":1,"message":"110","line":13,"column":8,"nodeType":"98","messageId":"99","endLine":13,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":58,"column":19,"nodeType":"113","messageId":"114","endLine":58,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":72,"column":19,"nodeType":"113","messageId":"114","endLine":72,"endColumn":21},{"ruleId":"96","severity":1,"message":"115","line":1,"column":26,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},{"ruleId":"96","severity":1,"message":"116","line":29,"column":9,"nodeType":"98","messageId":"99","endLine":29,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":69,"column":13,"nodeType":"113","messageId":"114","endLine":69,"endColumn":15},{"ruleId":"96","severity":1,"message":"117","line":82,"column":9,"nodeType":"98","messageId":"99","endLine":82,"endColumn":17},{"ruleId":"96","severity":1,"message":"116","line":29,"column":9,"nodeType":"98","messageId":"99","endLine":29,"endColumn":16},{"ruleId":"96","severity":1,"message":"118","line":10,"column":3,"nodeType":"98","messageId":"99","endLine":10,"endColumn":11},{"ruleId":"96","severity":1,"message":"119","line":11,"column":3,"nodeType":"98","messageId":"99","endLine":11,"endColumn":19},{"ruleId":"96","severity":1,"message":"116","line":28,"column":9,"nodeType":"98","messageId":"99","endLine":28,"endColumn":16},{"ruleId":"96","severity":1,"message":"120","line":2,"column":10,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"102","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"96","severity":1,"message":"121","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":18},{"ruleId":"96","severity":1,"message":"122","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":15},{"ruleId":"96","severity":1,"message":"100","line":9,"column":21,"nodeType":"98","messageId":"99","endLine":9,"endColumn":31},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setColumns' is assigned a value but never used.","'setData' is assigned a value but never used.","'Button' is defined but never used.","'ListItemText' is defined but never used.","'ListItem' is defined but never used.","'List' is defined but never used.","'Divider' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Typography' is defined but never used.","'CloseIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'classes' is assigned a value but never used.","'validate' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'fade' is defined but never used.","'FormDialog' is defined but never used.","'AddIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]